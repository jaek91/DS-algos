
--Big O Exercises (Jae Kim)--

---Step 1: Simplifying Expressions--- 

1. O(n + 10) = O(n)
2. O(100 * n) = O(n)
3. O(25) = O(1)
4. O(n^2 + n^3) = O(n^3)
5. O(n + n + n + n) = O(n)
6. O(1000 * log(n) + n) = O(n)
7. O(1000 * n * log(n) + n) = O(n*log(n))
8. O(2^n + n^2) = O(2^n)
9. O(5 + 3 + 1) = O(1)
10. O(n + n^(1/2) + n^2 + n * log(n)^10) = O(n^2)

---Step 2: Calculating Time Complexity---

1. logUpTo would have O(n) time complexity 
2. logAtLeast10 would have O(n) time complexity  
3. logAtMost10 would have O(1) time complexity
4. onlyElementsAtEvenIndex would have O(n) time complexity 
5. subtotals has an O(n^2) time complexity
6. vowelCount has an O(n) time complexity 

---Step 3: Short answer---
True or false: n^2 + n is O(n^2).  ANS: True 
True or false: n^2 * n is O(n^3). ANS: True
True or false: n^2 + n is O(n). ANS: False
What’s the time complexity of the .indexOf array method? O(n) 
What’s the time complexity of the .includes array method? O(n)
What’s the time complexity of the .forEach array method? O(n)
What’s the time complexity of the .sort array method? at worst O(n^2)
What’s the time complexity of the .unshift array method? O(n)
What’s the time complexity of the .push array method? O(1)
What’s the time complexity of the .splice array method? O(n)
What’s the time complexity of the .pop array method? O(1)
What’s the time complexity of the Object.keys() function? O(n)